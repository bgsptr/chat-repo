version: "3.8"
services:
  postgres:
    container_name: userdb
    image: postgres:latest
    ports:
      - 5432:5432
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_SCHEMA}
    volumes:
      - database_dockerizing:/var/lib/postgresql/data
      - ./dbshell:/docker-entrypoint-initdb.d/
    networks:
      - backend
  
  # postgres_migration:
  #   image: migrate/migrate
  #   container_name: postgres_migration
  #   networks:
  #     - db-network
  #   volumes:
  #     - ./dataservice/migration:/migrations
  #   depends_on:
  #     - postgres
  #   command: -path=/migrations -database postgres://${DB_USERNAME}:${DB_PASS}@localhost:5432/${DB_SCHEMA}?sslmode=disable up

  api:
    container_name: user_service
    build: .
    ports:
      - 3001:3000
    restart: always
    volumes:
      - api_volume:/usr/src/app/
    depends_on:
      - postgres
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_SCHEMA=${DB_SCHEMA}
      - DB_SOURCE=${DB_SOURCE}
      - DB_MIGRATE_LOCATION=${DB_MIGRATE_LOCATION}
    networks:
      - backend

volumes:
  database_dockerizing:
  api_volume:

networks:
  backend:
    driver: bridge
  # db-network:
  #   driver: bridge
